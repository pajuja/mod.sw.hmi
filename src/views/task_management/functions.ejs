function initTaskSpecifications(ngsiConnection) {	
	ngsiConnection.v2.listEntities({type: "TaskSpec"}).then((response) => {
		var entities = response.results;
		$.each(entities, function(i, entity) {
			if (entity.id !== undefined && entity.TaskSpec !== undefined) {
				var taskId = entity.id;
				var task = urldecode(entity.TaskSpec.value);
				ngsiConnection.v2.listEntities({type: "TaskSpecState"}).then((response2) => {
					var entities2 = response2.results;
					var taskHTML = getTaskSpecificationHTML(taskId, "&nbsp;", "&nbsp;", task);	
					$.each(entities2, function(i, entity2) {
						if (entity2.refId !== undefined && entity2.state !== undefined && entity2.message !== undefined && entity2.refId.value == taskId) {		
							var taskStatus = entity2.state.value;
							var taskMessage = entity2.message.value;
							taskHTML = getTaskSpecificationHTML(taskId, taskStatus, taskMessage, task);
						}
					});
					$("#taskSpecifications").append(taskHTML);
				});
			}
		});
	});
}

function initCurrentTasks(ngsiConnection) {
	ngsiConnection.v2.listEntities({type: "taskSet"}).then((response) => {
		var entities = response.results;
		$.each(entities, function(i, entity) {	
			var currentTasks = entity.taskList.value;
			$.each(currentTasks, function(i, currentTask) {
				var taskValue = currentTask.value;
				var currentTaskHTML = getCurrentTaskHTML(taskValue);
				$("#currentTasks").append(taskHTML);			
			});	
		});
	});					
}

function initOngoingTasks(ngsiConnection) {
	ngsiConnection.v2.listEntities({type: "Task"}).then((response) => {
		var entities = response.results;
		$.each(entities, function(i, entity) {
			var taskId = entity.id;
			var taskDescription = entity.taskName.value;
			var taskStatus = entity.state.value;		
			var time = entity.time.value;	
			var taskHTML = getOngoingTaskHTML(taskId, taskDescription, taskStatus, time);
			$("#ongoingTasks").append(taskHTML);			
		});
	});					
}

function updateTaskSpecifications(notification) {							   
	$.each(notification.data, function () {		
		if (this.refId !== undefined && this.state !== undefined && this.message !== undefined) {	
			var taskSpecId = this.refId.value
			var taskStatus = this.state.value;
			var taskMessage = this.message.value;	
			if ($("#taskSpecification_" + taskSpecId).length) {
				var taskStatusStr = "";
				if (taskStatus == 0) {
					taskStatusStr = "Idle";
				} else if (taskStatus == 1) {
					taskStatusStr = "Ok";
				} else if (taskStatus == -1) {
					taskStatusStr = "Error";
				}
				$("#taskSpecification_status_" + taskSpecId).html(taskStatusStr);
				$("#Message_" + taskSpecId).html(taskMessage);
			}
		}			
	});
}

function updateCurrentTasks(notification) {							   
	$.each(notification.data, function () {		
		var currentTasks = this.taskList.value;
		$.each(currentTasks, function(i, currentTask) {
			var taskValue = currentTask.value;
			var currentTaskHTML = getCurrentTaskHTML(taskValue);
			if ($("#currentTask_" + taskValue).length) {
				// already exists
			} else {
				$("#currentTasks").append(taskHTML);			
			}
		});	
	});
}

function updateOngoingTasks(notification) {							   
	$.each(notification.data, function () {		
		var taskId = this.id;
		var taskStatus = this.state.value;		
		var taskStatusStr = "";
		if (taskStatus == 0) {
			taskStatusStr = "Idle";
		} else if (taskStatus == 1) {
			taskStatusStr = "Running";
		} else if (taskStatus == 2) {
			taskStatusStr = "Waiting";
		} else if (taskStatus == 3) {
			taskStatusStr = "Active";
		} else if (taskStatus == 4) {
			taskStatusStr = "Finished";
		} else if (taskStatus == 5) {
			taskStatusStr = "Aborted";
		} else if (taskStatus == 6) {
			taskStatusStr = "Error";
		}		
		var taskDescription = this.taskName.value;			
		var time = this.time.value;			
		if ($("#ongoingTask_" + taskId).length) {
			$("#ongoingTask_status_" + taskId).html(taskStatusStr);
			$("#ongoingTask_description_" + taskId).html(taskDescription);
			$("#ongoingTask_time_" + taskId).html(time);
		} else {
			var taskHTML = getOngoingTaskHTML(taskId, taskDescription, taskStatusStr, time);
			$("#ongoingTasks").append(taskHTML);			
		}			
	});
}

function getTaskSpecificationHTML(taskId, taskStatus, taskMessage, task) {
	return "<tr id=\"taskSpecification_" + taskId + "\" class=\"clickable-row\"><td>" + taskId + "</td><td id=\"taskSpecification_status_" + taskId + "\">" + taskStatus + "</td><td id=\"Message_" + taskId + "\">" + taskMessage + "</td><td><textarea id=\"TaskSpec_" + taskId + "\" rows=\"4\" readonly>" + task + "</textarea></td><td><button onclick=\"cancelTask('" + taskId + "')\">Delete</button></td></tr>";
}

function getCurrentTaskHTML(taskValue) {
	return "<tr id=\"currentTask_" + taskValue + "\" class=\"clickable-row\"><td>" + taskValue + "</td></tr>";
	/*<td><button onclick=\"cancelTask('" + taskId + "')\">Cancel</button></td></tr>";*/
}

function getOngoingTaskHTML(taskId, taskDescription, taskStatus, time) {
	return "<tr id=\"ongoingTask_" + taskId + "\" class=\"clickable-row\"><td>" + taskId + "</td><td id=\"ongoingTask_description_" + taskId + "\">" + taskDescription + "</td><td id=\"ongoingTask_status_" + taskId + "\">" + taskStatus + "</td><td id=\"ongoingTask_time_" + taskId + "\">" + new Date(time).toLocaleDateString() + " " + new Date(time).toLocaleTimeString() + "</td></tr>";
	/*<td><button onclick=\"cancelTask('" + taskId + "')\">Cancel</button></td></tr>";*/
}

function sendTaskSpecification() {
	if ($.trim($("#taskDescriptionTextArea").val()) != "") {				
		var ngsiConnection = new NGSI.Connection("http://" + ocb_host + ":" + ocb_port, {
			ngsi_proxy_url: "http://" + ngsi_proxy_host + ":" + ngsi_proxy_port
		});
		var taskId = "TaskSpec_" + Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);
		ngsiConnection.v2.createEntity({
			"id": taskId,
			"type": "TaskSpec",
			"TaskSpec": {
				"type": "Text",
				"value": urlencode($("#taskDescriptionTextArea").val())
			}
		}).then(
			(response) => {
				// Entity created successfully
				var newTaskHTML = getTaskSpecificationHTML(taskId, "&nbsp;", "&nbsp;", $("#taskDescriptionTextArea").val());
				$("#taskSpecifications").append(newTaskHTML);
				$("#taskDescriptionTextArea").val("");							
				showAndDismissAlert("success", "Task sent succesfully!", "taskManagementAlert");
			}, (error) => {
				console.log(error);
				// Error creating the entity
				showAndDismissAlert("error", "There was an error sending the task (" + error + ")!", "taskManagementAlert");
			}
		);
	}
}

function cancelTask(taskId) {
	bootbox.confirm("Are you sure you want to delete the task specification?", function(result) {
		if (result == true) {				
			var ngsiConnection = new NGSI.Connection("http://" + ocb_host + ":" + ocb_port, {
				ngsi_proxy_url: "http://" + ngsi_proxy_host + ":" + ngsi_proxy_port
			});
			ngsiConnection.v2.deleteEntity(taskId).then(
				(response) => {
					$("#taskSpecification_" + taskId).remove();
					showAndDismissAlert("success", "Task specification deleted succesfully!", "taskManagementAlert");
				}, (error) => {
					showAndDismissAlert("error", "There was an error deleting the task specification (" + error + ")!", "taskManagementAlert");
				}
			);			
		}
	});
	return false;
}