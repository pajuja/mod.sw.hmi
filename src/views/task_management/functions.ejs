function initTasks(ngsiConnection) {
	ngsiConnection.v2.listEntities({type: "TaskSpec"}).then((response) => {
		var entities = response.results;
		$.each(entities, function(i, entity) {
			var taskId = entity.id;
			var task = urldecode(entity.TaskSpec.value);
			ngsiConnection.v2.listEntities({type: "TaskSpecState"}).then((response2) => {
				var entities2 = response2.results;
				$.each(entities2, function(i, entity2) {
					if (entity2.refId.value == taskId) {
						var taskStatus = entity2.Status.value;
						var taskMessage = entity2.Message.value;
						var taskHTML = getTaskHTML(taskId, taskStatus, taskMessage, task);		
						$("#currentTasks").append(taskHTML);
					}
				});
			});
		});
	});					
}

function updateTasks(notification) {							   
	$.each(notification.data, function () {		
		var taskId = this.refId.value
		var taskStatus = this.Status.value;
		var taskMessage = this.Message.value;	
		if ($("#currentTask_" + taskId).length) {
			$("#Status_" + taskId).html(taskStatus);
			$("#Message_" + taskId).html(taskMessage);
		}							
	});
}

function getTaskHTML(taskId, taskStatus, taskMessage, task) {
	return "<tr id=\"currentTask_" + taskId + "\" class=\"clickable-row\"><td>" + taskId + "</td><td id=\"Status_" + taskId + "\">" + taskStatus + "</td><td id=\"Message_" + taskId + "\">" + taskMessage + "</td><td><textarea id=\"TaskSpec_" + taskId + "\" rows=\"4\" readonly>" + task + "</textarea></td><td><button onclick=\"cancelTask('" + taskId + "')\">Cancel</button></td></tr>";
}

function sendTask() {
	if ($.trim($("#taskDescriptionTextArea").val()) != "") {
		$.ajax({
			type: "GET",
			url: "./api/config",
			dataType: "json",
			success: function (data) {					
				var ngsiConnection = null;
				$(data).each(function(i, item) {							
					ngsiConnection = new NGSI.Connection("http://" + item.ocb_host + ":" + item.ocb_port, {
						ngsi_proxy_url: "http://" + item.ngsi_proxy_host + ":" + item.ngsi_proxy_port
					});
				})
				if (ngsiConnection != null) {
					var taskId = "TaskSpec_" + Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);
					ngsiConnection.v2.createEntity({
						"id": taskId,
						"type": "TaskSpec",
						"TaskSpec": {
							"type": "Text",
							"value": urlencode($("#taskDescriptionTextArea").val())
						}
					}).then(
						(response) => {
							// Entity created successfully
							var newTaskHTML = getTaskHTML(taskId, "&nbsp;", "&nbsp;", $("#taskDescriptionTextArea").val());
							$("#currentTasks").append(newTaskHTML);
							$("#taskDescriptionTextArea").val("");							
							showAndDismissAlert("success", "Task sent succesfully!", "taskManagementAlert");
						}, (error) => {
							console.log(error);
							// Error creating the entity
							showAndDismissAlert("error", "There was an error sending the task (" + error + ")!", "taskManagementAlert");
						}
					);
				}
			}
		});
	}
}

function cancelTask(taskId) {
	bootbox.confirm("Are you sure you want to cancel the task?", function(result) {
		if (result == true) {
			$.ajax({
				type: "GET",
				url: "./api/config",
				dataType: "json",
				success: function (data) {					
					var ngsiConnection = null;
					$(data).each(function(i, item) {							
						ngsiConnection = new NGSI.Connection("http://" + item.ocb_host + ":" + item.ocb_port, {
							ngsi_proxy_url: "http://" + item.ngsi_proxy_host + ":" + item.ngsi_proxy_port
						});
					})
					if (ngsiConnection != null) {		
						ngsiConnection.v2.listEntities({type: "TaskSpecState"}).then((response) => {
							var entities = response.results;
							$.each(entities, function(i, entity) {
								if (entity.refId.value == taskId) {									
									ngsiConnection.v2.deleteEntity(entity.id).then(
										(response) => {
									}, (error) => {}
									);
								}
							});
						});
						ngsiConnection.v2.deleteEntity(taskId).then(
							(response) => {
								$("#currentTask_" + taskId).remove();
								// Entity deleted successfully
								// response.correlator transaction id associated with the server response
								showAndDismissAlert("success", "Task canceled succesfully!", "taskManagementAlert");
							}, (error) => {
								// Error deleting the entity
								// If the error was reported by Orion, error.correlator will be
								// filled with the associated transaction id
								showAndDismissAlert("error", "There was an error canceling the task (" + error + ")!", "taskManagementAlert");
							}
						);
					}
				}
			});			
		}
	});
	return false;
}
