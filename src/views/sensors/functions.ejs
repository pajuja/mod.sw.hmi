var ON_OFF_SENSOR = "HMI button";

var currentlyProcessing = new Array();

function createNewSensor() {
	if ($("#new_sensor_agent_id").val() != "") {
		$.ajax({
			type: "GET",
			url: "./api/config",
			dataType: "json",
			success: function (data) {					
				var ngsiConnection = null;
				$(data).each(function(i, item) {							
					ngsiConnection = new NGSI.Connection("http://" + item.ocb_host + ":" + item.ocb_port, {
						ngsi_proxy_url: "http://" + item.ngsi_proxy_host + ":" + item.ngsi_proxy_port
					});
				})
				if (ngsiConnection != null) {
					var sensorId = $("#new_sensor_agent_id").val().replace(/ /g, "_");
					ngsiConnection.v2.createEntity({
						"id": sensorId,
						"type": "SensorAgent",
						"sensorData": {
								"type": "array",
								"value": [
									{
										"type": "SensorDataEntry",
										"value": {
											"measurementType": {
												"type": "string",
												//"value": $("#new_sensor_measurement_type").val()
												"value": "-"
											},
											"modifiedTime": {
												"type": "string",
												"value": new Date().toISOString()
											},
											"readings": {
												"type": "array",
												"value": [
													{
														"type": "SensorReading",
														"value": {
															"reading": {
																"type": "boolean",
																"value": false
															}
														}
													}
												]
											},
											"sensorId": {
												"type": "string",
												//"value": $("#new_sensor_id").val()
												"value": sensorId
											},
											"sensorManufacturer": {
												"type": "string",
												//"value": $("#new_sensor_manufacturer").val()
												"value": "-"
											},
											"sensorType": {
												"type": "string",
												//"value": $("#new_sensor_type").val()
												"value": ON_OFF_SENSOR
											}
										}
									}
								]
							}
					}).then(
						(response) => {
							// Entity created successfully
							var onOffSensorHTML = "<tr id=\"onOffSensor_" + sensorId + "\">" + getOnOffSensorRowHTML(sensorId, "", "", sensorId, ON_OFF_SENSOR, "") + "</tr>";
							$("#currentOnOffSensors").append(onOffSensorHTML);							
							$("#new_sensor_agent_id").val("");							
							//$("#new_sensor_measurement_type").val("");
							//$("#new_sensor_id").val("");
							//$("#new_sensor_manufacturer").val("");
							//$("#new_sensor_type").val("");							
							showAndDismissAlert("success", "New HMI button created succesfully!", "sensorsAlert");
						}, (error) => {
							console.log(error);
							// Error creating the entity
							showAndDismissAlert("danger", "There was an error creating the HMI button (" + error + ")!", "sensorsAlert");
						}
					);
				}
			}
		});
	} else {
		showAndDismissAlert("danger", "Id field is required.", "sensorsAlert");		
	}
}

function initSensors(ngsiConnection) {	

	ngsiConnection.v2.listEntities({type: "SensorAgent"}).then((response) => {
		var entities = response.results;
		$.each(entities, function(i, entity) {
			var sensorId = entity.id;
			$.each(entity.sensorData.value, function(i, sensor) {				
				var sensorValue = false;
				var manufacturer = sensor.value.sensorManufacturer.value;
				var measurementType = sensor.value.measurementType.value;
				var sensorId = sensor.value.sensorId.value;
				var sensorType = sensor.value.sensorType.value;				
				if (sensorType == ON_OFF_SENSOR) {
					$.each(sensor.value.readings.value, function(i, sensorValue) {
						if (sensorValue.value.reading.type == "Boolean" || sensorValue.value.reading.type == "boolean") {
							sensorValue = sensorValue.value.reading.value;					
						}
					});
					var onOffSensorHTML = "<tr id=\"onOffSensor_" + sensorId + "\">" + getOnOffSensorRowHTML(sensorId) + "</tr>";
					$("#currentOnOffSensors").append(onOffSensorHTML);					
				}
			});
		});
	});			
	$('#currentOnOffSensors').on('click', 'a', function(e) {
		var sensorId = this.id.substr("onOffSensorButton_".length);						
		if (currentlyProcessing.indexOf(sensorId) != -1) {
			return false;
		} else {
			currentlyProcessing.push(sensorId);
			$("#onOffSensorButton_" + sensorId).toggleClass("hmi-button").toggleClass("hmi-button-disabled");	
			
			// first send true
			ngsiConnection.v2.replaceEntityAttributeValue({
				id: sensorId,
				attribute: "sensorData",
				value: [
					{
						"type": "SensorDataEntry",
						"value": {
							"measurementType": {
								"type": "string",
								"value": "-"
							},
							"modifiedTime": {
								"type": "string",
								"value": new Date().toISOString()
							},
							"readings": {
								"type": "array",
								"value": [
									{
										"type": "SensorReading",
										"value": {
											"reading": {
												"type": "boolean",
												"value": true
											}
										}
									}
								]
							},
							"sensorId": {
								"type": "string",
								"value": sensorId
							},
							"sensorManufacturer": {
								"type": "string",
								"value": "-"
							},
							"sensorType": {
								"type": "string",
								"value": ON_OFF_SENSOR
							}
						}
					}
				]
			}).then(
				(response) => {				
					// then send false:
					setTimeout(function() {
						ngsiConnection.v2.replaceEntityAttributeValue({
							id: sensorId,
							attribute: "sensorData",
							value: [
								{
									"type": "SensorDataEntry",
									"value": {
										"measurementType": {
											"type": "string",
											"value": "-"
										},
										"modifiedTime": {
											"type": "string",
											"value": new Date().toISOString()
										},
										"readings": {
											"type": "array",
											"value": [
												{
													"type": "SensorReading",
													"value": {
														"reading": {
															"type": "boolean",
															"value": false
														}
													}
												}
											]
										},
										"sensorId": {
											"type": "string",
											"value": sensorId
										},
										"sensorManufacturer": {
											"type": "string",
											"value": "-"
										},
										"sensorType": {
											"type": "string",
											"value": ON_OFF_SENSOR
										}
									}
								}
							]
						}).then(
							(response) => {
								currentlyProcessing = jQuery.grep(currentlyProcessing, function(value) {
									return value != sensorId;
								});
								$("#onOffSensorButton_" + sensorId).toggleClass("hmi-button-disabled").toggleClass("hmi-button");		
								// Entity value replaced successfully
								// response.value entity value
								// response.correlator transaction id associated with the server response
							}, (error) => {
								// Error replacing attribute value
								// If the error was reported by Orion, error.correlator will be
								// filled with the associated transaction id
							}
						);				
					}, 1500);					
				}, (error) => {
					// Error replacing attribute value
					// If the error was reported by Orion, error.correlator will be
					// filled with the associated transaction id
				}
			);
		}
    });
	
	$('#currentOnOffSensors').on('click', 'a.removeOnOffSensorButton', function(e) {	
		event.stopPropagation();
		if (confirm("Are you sure you want to delete?")) {
			var sensorId = this.id.substr("removeOnOffSensorButton_".length)
			ngsiConnection.v2.deleteEntity(sensorId).then(
				(response) => {
					$("#onOffSensor_" + sensorId).remove();
					$("#SensorDataGraphContainer_" + sensorId).remove();
					// Entity deleted successfully
					// response.correlator transaction id associated with the server response
					showAndDismissAlert("success", "HMI button deleted succesfully!", "sensorsAlert");
				}, (error) => {
					// Error deleting the entity
					// If the error was reported by Orion, error.correlator will be
					// filled with the associated transaction id
					showAndDismissAlert("error", "There was an error deleting the HMI button: " + error + "!", "sensorsAlert");
				}
			);
		} else {}       
		event.preventDefault();
	});
	
}

function updateSensors(notification) {						
	//console.log("Received notification: " + JSON.stringify(notification));					   
	$.each(notification.data, function () {
		var sensorId = this.id;
		$.each(this.sensorData.value, function () {							
			if (this.value.sensorType.value == ON_OFF_SENSOR) {
				var onOffSensorHTML = getOnOffSensorRowHTML(sensorId);
				if (!$("#onOffSensor_" + sensorId).length) {
					$("#currentOnOffSensors").append("<tr id=\"onOffSensor_" + sensorId + "\">" + onOffSensorHTML + "</tr>");
				}	
			}
		});
	});	
}

function getOnOffSensorRowHTML(sensorId) {
	//return "<td>" + sensorId + "</td><td>" + manufacturer + "</td><td>" + measurementType + "</td><td>" + sensorId + "</td><td>" + sensorType + "</td><td><input id=\"booleanToggle_" + sensorAgentId + "_" + sensorId + "\" class=\"booleanToggle\" type=\"checkbox\" " + checked + "></td>";
	//return "<td>" + sensorId + "</td><td><input id=\"booleanToggle_" + sensorId + "\" class=\"booleanToggle\" type=\"checkbox\" " + checked + "></td>";
	//var htmlStr = "<td><input type=\"button\" class=\"btn btn-primary\" id=\"onOffSensorButton_" + sensorId + "\" value=\"" + sensorId + "\"></input>";
	var htmlStr = "<td><a href=\"#\" id=\"onOffSensorButton_" + sensorId + "\" class=\"hmi-button\">" + sensorId + "</a>";
	<% if (user && user.role == "admin") { %> 
		htmlStr += "&nbsp;(<a id=\"removeOnOffSensorButton_" + sensorId + "\" class=\"removeOnOffSensorButton\" href=\"#\">delete</a>)";
	<% } %>
	htmlStr += "</td>";
	return htmlStr;
}