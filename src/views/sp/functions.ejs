let sensingAndPerceptionEdges = [];
let sensingAndPerceptionVertices = [];
let sensingAndPerceptionAnnotations = [];

function initSensingAndPerception(ngsiConnection) {
  ngsiConnection.v2.listEntities({type: 'ROBOT'}).then((response) => {
    const entities = response.results;
    $.each(entities, function(i, entity) {
      if (entity.graph) {
        const edges = entity.graph.value.edges.value;
        const vertices = entity.graph.value.vertices.value;
        for (i=0; i < edges.length; i++) {
          const edge = edges[i];
          const destVertexUUID = edge.value.uuid_dest.value;
          const srcVertexUUID = edge.value.uuid_src.value;
          $.each(vertices, function(i, vertex) {
            if (vertex.value.uuid.value == destVertexUUID) {
              edge.value.uuid_dest.value = vertex.value;
            }
            if (vertex.value.uuid.value == srcVertexUUID) {
              edge.value.uuid_src.value = vertex.value;
            }
          });
          edges[i] = edge;
        }
        sensingAndPerceptionEdges = edges;
        sensingAndPerceptionVertices = vertices;
      }
      if (entity.annotations && entity.annotations.value.annotations.value != "undefined") {
        sensingAndPerceptionAnnotations = entity.annotations.value.annotations.value;
      }
    });
  });
}

function updateSensingAndPerception(notification) {
  $.each(notification.data, function() {
    if (this.graph) {
      const edges = this.graph.value.edges.value;
      const vertices = this.graph.value.vertices.value;
      for (i=0; i < edges.length; i++) {
        const edge = edges[i];
        const destVertexUUID = edge.value.uuid_dest.value;
        const srcVertexUUID = edge.value.uuid_src.value;
        $.each(vertices, function(i, vertex) {
          if (vertex.value.uuid.value == destVertexUUID) {
            edge.value.uuid_dest.value = vertex.value;
          }
          if (vertex.value.uuid.value == srcVertexUUID) {
            edge.value.uuid_src.value = vertex.value;
          }
        });
        edges[i] = edge;
      }
      sensingAndPerceptionEdges = edges;
      sensingAndPerceptionVertices = vertices;
    }
    if (this.annotations && this.annotations.value.annotations.value != "undefined") {
      sensingAndPerceptionAnnotations = this.annotations.value.annotations.value;
    }
  });
  updateSPGraphOnCanvas();
}
